generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite" // for SQLite/Turso
  url      = "file:./dev.db" // Path to your SQLite database file
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  email    String   @unique
  password String
  imageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AboutMe {
  id       String @id @default(uuid())
  name     String
  location String
  bio      String

  aboutMeHeader      String
  aboutMeDescription String

  schools  String
  collages String

  overview       String
  overviewHeader String

  learningJourney       String
  learningJourneyHeader String

  linkedinUrl    String
  githubUrl      String
  whatsappUrl    String
  instagramUrl   String
  facebookUrl    String
  primaryGmail   String
  secondaryGmail String
  mobileNumber   String

  anonymousMessageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id            String           @id @default(uuid())
  projectName   String
  technologies  String
  aboutProject  String
  liveDemoLink  String
  websiteLink   String
  githubLink    String
  gitlabLink    String
  bitbucketLink String
  projectType   String

  images   Image[]
  features ProjectFeature[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectFeature {
  id                 String  @id @default(uuid())
  projectId          String
  featureTitle       String
  featureDescription String
  featureImage       String
  featureVideo       String

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skill {
  id       String @id @default(uuid())
  name     String
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Certificate {
  id              String  @id @default(uuid())
  provider        String
  title           String
  imageUrl        String
  providerLogoUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PublicProfile {
  id                String @id @default(uuid())
  imageUrl          String
  publicProfileName String
  publicProfileLink String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Badge {
  id           String @id @default(uuid())
  imageUrl     String
  platformName String
  platformLink String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        String  @id @default(uuid())
  url       String
  projectId String

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
